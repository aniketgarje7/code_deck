{"version":3,"file":"static/js/466.87be784d.chunk.js","mappings":"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","sources":["component/ModalTypes/NewFolder.js","component/ModalTypes/NewPlayGround.js","component/ModalTypes/NewPlayGroundAndFolder.js","component/ModalTypes/EditFolder.js","component/ModalTypes/EditPlayGroundTitle.js","component/ModalTypes/Loading.js","component/ModalTypes/InputFullScreen.js","component/ModalTypes/OutputFullScreen.js","firebaseCode.js","component/LogIn/FormInput.js","component/LogIn/Toast.js","component/LogIn/SignUp.js","component/LogIn/SignIn.js","component/ModalTypes/SignSignUp.js","component/Modal.js"],"sourcesContent":["import React,{useState} from 'react'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\nimport {GetPlayGroundContext} from '../../context/PlaygroundContext'\r\n\r\nconst NewFolder = () => {\r\n    const { closeModal } = GetModalContext()\r\n    const { addFolder } = GetPlayGroundContext()\r\n    const [folderTitle, setFolderTitle] = useState(\"\")\r\n  return (\r\n    <>\r\n    <div className='flex flex-row justify-end p-4' >\r\n      <RxCross1 className='cursor-pointer' onClick={() => closeModal()} />\r\n    </div>\r\n    <div className=' px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 '>\r\n      <h2> Create a New Folder</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={folderTitle}\r\n        placeholder=\"Please enter folder title\"\r\n        onChange={(e) => setFolderTitle(e.target.value)}\r\n        className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full'\r\n      />\r\n      <button\r\n      className='p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg'\r\n        onClick={() => {\r\n          addFolder(folderTitle);\r\n          closeModal();\r\n        }}\r\n      >\r\n        Create Folder\r\n      </button>\r\n    </div>\r\n\r\n  </>\r\n  )\r\n}\r\n\r\nexport default NewFolder","import React,{useState} from 'react'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\nimport {GetPlayGroundContext} from '../../context/PlaygroundContext'\r\nimport Select from 'react-select'\r\nconst NewPlayGround = () => {\r\n    const { isOpenModal, closeModal } = GetModalContext()\r\n  const { addPlayground } = GetPlayGroundContext()\r\n  const languageOptions = [\r\n    { value: 'javascript', label: 'javascript' },\r\n    { value: 'python', label: 'python' },\r\n    { value: 'java', label: 'java' },\r\n    { value: 'cpp', label: 'cpp' }\r\n  ];\r\n\r\n  const { folderId } = isOpenModal.identifiers;\r\n  const [cardTitle, setCardTitle] = useState(\"\");\r\n  const [language, setLanguage] = useState(languageOptions[0]);\r\n\r\n  const handleLanguageChange = (selectedOption) => {\r\n    setLanguage(selectedOption);\r\n  };\r\n  return (\r\n    <>\r\n    <div className='flex flex-row justify-end p-4' >\r\n      <RxCross1 className='cursor-pointer' onClick={() => closeModal()} />\r\n    </div>\r\n    <div className=' px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 '>\r\n      <h2> Create a New Playground</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={cardTitle}\r\n        placeholder=\"Please enter Playground title\"\r\n        onChange={(e) => setCardTitle(e.target.value)}\r\n        className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full'\r\n      />\r\n      <Select\r\n        options={languageOptions}\r\n        value={language}\r\n        onChange={handleLanguageChange}\r\n\r\n      />\r\n      <button\r\n        className='p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg'\r\n        onClick={() => {\r\n          addPlayground(folderId,cardTitle,language.value);\r\n          closeModal();\r\n        }}\r\n      >\r\n        Create PlayGround\r\n      </button>\r\n    </div>\r\n\r\n  </>\r\n  )\r\n}\r\n\r\nexport default NewPlayGround","import React,{useState} from 'react'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\nimport {GetPlayGroundContext} from '../../context/PlaygroundContext'\r\nimport Select from 'react-select'\r\n\r\n\r\nconst NewPlayGroundAndFolder = () => {\r\n    const {  closeModal } = GetModalContext()\r\n  const { addPlaygroundAndFolder } = GetPlayGroundContext()\r\n  const languageOptions = [\r\n    { value: 'javascript', label: 'javascript' },\r\n    { value: 'python', label: 'python' },\r\n    { value: 'java', label: 'java' },\r\n    { value: 'cpp', label: 'cpp' }\r\n  ];\r\n\r\n  const [playgroundName, setPlaygroundName] = useState(\"\");\r\n  const [folderName, setFolderName] = useState(\"\");\r\n  const [language, setLanguage] = useState(languageOptions[0]);\r\n  const handleLanguageChange = (selectedOption) => {\r\n    setLanguage(selectedOption);\r\n  };\r\n  return (\r\n    <>\r\n    <div className='flex flex-row justify-end p-4' >\r\n      <RxCross1 className='cursor-pointer' onClick={() => closeModal()} />\r\n    </div>\r\n    <div className=' px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 '>\r\n      <h2> Create a New Playground & New Folder</h2>\r\n      <div className='flex w-full'>\r\n\r\n        <label>Enter Folder Name</label>\r\n        <input\r\n          type=\"text\"\r\n          value={folderName}\r\n          placeholder=\"Please enter Playground title\"\r\n          onChange={(e) => setFolderName(e.target.value)}\r\n          className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full'\r\n        />\r\n      </div>\r\n      <div className='flex w-full'>\r\n        <label>Enter Playground Name</label>\r\n        <input\r\n          type=\"text\"\r\n          value={playgroundName}\r\n          placeholder=\"Please enter Playground title\"\r\n          onChange={(e) => setPlaygroundName(e.target.value)}\r\n          className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full '\r\n        />\r\n      </div>\r\n\r\n      <Select\r\n        options={languageOptions}\r\n        value={language}\r\n        onChange={handleLanguageChange}\r\n\r\n      />\r\n      <button\r\n        className='p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg'\r\n        onClick={() => {\r\n          addPlaygroundAndFolder(folderName, playgroundName, language.value);\r\n          closeModal();\r\n        }}\r\n      >\r\n        Create PlayGround And Folder\r\n      </button>\r\n    </div>\r\n\r\n  </>\r\n  )\r\n}\r\n\r\nexport default NewPlayGroundAndFolder","import React,{useState} from 'react'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\nimport {GetPlayGroundContext} from '../../context/PlaygroundContext'\r\nconst EditFolder = () => {\r\n    const{closeModal , isOpenModal} =GetModalContext()\r\n  const { editFolderTitle, folders } = GetPlayGroundContext()\r\n   console.log('edit folder')\r\n  const folderId = isOpenModal.identifiers.folderId;\r\n  const [ folderTitle, setFolderTitle ] = useState(folders[folderId].title)\r\n  return (\r\n    <>\r\n    <div className='flex flex-row justify-end p-4' >\r\n      <RxCross1 className='cursor-pointer' onClick={() => closeModal()} />\r\n    </div>\r\n    <div className=' px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 '>\r\n      <h2> Edit Folder </h2>\r\n      <input\r\n        type=\"text\"\r\n        value={folderTitle}\r\n        placeholder=\"Please enter folder title\"\r\n        onChange={(e) => setFolderTitle(e.target.value)}\r\n        className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full'\r\n      />\r\n      <button\r\n        className='p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg'\r\n        onClick={() => {\r\n          editFolderTitle(folderId,folderTitle);\r\n          closeModal();\r\n        }}\r\n      >\r\n        Proceed\r\n      </button>\r\n    </div>\r\n\r\n  </>\r\n  )\r\n}\r\n\r\nexport default EditFolder","import React,{useState} from 'react'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\nimport {GetPlayGroundContext} from '../../context/PlaygroundContext'\r\n\r\nconst EditPlayGroundTitle = () => {\r\n    const { closeModal, isOpenModal } = GetModalContext()\r\n  const { editPlaygroundTitle, folders } = GetPlayGroundContext()\r\n\r\n  const {folderId ,cardId} = isOpenModal.identifiers;\r\n  const [playgroundTitle, setPlaygroundTitle] = useState(folders[folderId].playgrounds[cardId].title)\r\n  return (\r\n    <>\r\n    <div className='flex flex-row justify-end p-4' >\r\n      <RxCross1 className='cursor-pointer' onClick={() => closeModal()} />\r\n    </div>\r\n    <div className=' px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 '>\r\n      <h2> Edit Folder </h2>\r\n      <input\r\n        type=\"text\"\r\n        value={playgroundTitle}\r\n        placeholder=\"Please enter folder title\"\r\n        onChange={(e) => setPlaygroundTitle(e.target.value)}\r\n        className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full'\r\n      />\r\n      <button\r\n        className='p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg'\r\n        onClick={() => {\r\n          editPlaygroundTitle(folderId, cardId ,playgroundTitle);\r\n          closeModal();\r\n        }}\r\n      >\r\n        Proceed\r\n      </button>\r\n    </div>\r\n\r\n  </>\r\n  )\r\n}\r\n\r\nexport default EditPlayGroundTitle","import React from 'react'\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div>Loading...</div>\r\n  )\r\n}\r\n\r\nexport default Loading","import React from 'react'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\nimport {AiOutlineClose} from 'react-icons/ai'\r\nconst InputFullScreen = () => {\r\n  const {closeModal,currentInput,setCurrentInput} = GetModalContext()\r\n  return (\r\n    <>\r\n    \r\n    <div className='h-96 w-full lg:w-screen lg:h-screen '>\r\n      <div className='flex justify-end p-4'>\r\n        <AiOutlineClose onClick={()=>closeModal()} className='h-4 w-4 cursor-pointer '/>\r\n        </div >\r\n      <textarea  className='h-[calc(80vh_-_4rem)] w-full !outline-none rounded p-4 lg:width-screen lg:h-screen'  onChange={(e)=>setCurrentInput(e.target.value)}\r\n        value={currentInput}/>\r\n    </div>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default InputFullScreen","import React from 'react'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\nconst OutputFullScreen = () => {\r\n    const {closeModal,currentOutput} = GetModalContext()\r\n  return (\r\n    <div className='h-96 w-full sm:w-16'>\r\n    <div className='flex justify-end p-4'>\r\n      <AiOutlineClose onClick={()=>closeModal()} className='h-4 w-4 cursor-pointer '/>\r\n      </div>\r\n    <textarea  className='h-[calc(80vh_-_4rem)] w-full !outline-none rounded p-4'  \r\n      value={currentOutput}/>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default OutputFullScreen","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport {getAuth} from 'firebase/auth'\r\nimport {getFirestore} from 'firebase/firestore'\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBYOrG_JV2XN0psuW1QurQS7OwW7vKMDXU\",\r\n  authDomain: \"codedeck-b9dce.firebaseapp.com\",\r\n  projectId: \"codedeck-b9dce\",\r\n  storageBucket: \"codedeck-b9dce.appspot.com\",\r\n  messagingSenderId: \"566280963049\",\r\n  appId: \"1:566280963049:web:fe5ec1f206ee630d040178\",\r\n  measurementId: \"G-QRFB5XC7S8\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\nconst auth = getAuth(app)\r\nconst db = getFirestore(app)\r\nexport {auth,db}","import React from 'react'\r\nimport { Controller } from 'react-hook-form'\r\nconst FormInput = ({\r\n    label,\r\n    labelStrong,\r\n    type,\r\n    accept,\r\n    name,\r\n    control,\r\n    required,\r\n    ...props\r\n}) => {\r\n    \r\n  return (\r\n    <div className='mt-2' >\r\n    <label htmlFor={name} className='flex gap-2'>\r\n        <h4 className='text-gray-500 text-sm'>{label}</h4>\r\n        {required && <h6 className='text-red text-sm'>*</h6>}\r\n    </label>\r\n    <div>\r\n        <Controller\r\n            control={control}\r\n            name={name}\r\n            render={({ field }) => (\r\n                <input\r\n                    {...field}\r\n                    type={type}\r\n                    value={props?.value}\r\n                    id={name}\r\n                    accept={props?.accept}\r\n                    placeholder={props?.placeholder}\r\n                    className='w-full border-2 bg-white p-3 mt-2 font-semibold shadow-lg rounded-lg'\r\n                />\r\n            )}\r\n        />\r\n        {\r\n            props?.error && <span className='text-red text-[8px]'>{props?.error}</span>\r\n        }\r\n    </div>\r\n\r\n</div>\r\n  )\r\n}\r\n\r\nexport default FormInput","export const toastArray = {\r\n    position: \"top-right\",\r\n    autoClose: 4000,\r\n    hideProgressBar: false,\r\n    closeOnClick: false,\r\n    pauseOnHover: false,\r\n    draggable: false,\r\n    progress: undefined,\r\n    theme: \"light\",\r\n  };","import React,{useState} from 'react'\r\n\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup'\r\nimport { useForm } from 'react-hook-form'\r\nimport { auth } from '../../firebaseCode'\r\nimport FormInput from './FormInput'\r\nimport { toast } from \"react-toastify\";\r\nimport { toastArray } from \"./Toast\";\r\nimport { GetModalContext } from '../../context/ModalContext'\r\n\r\nconst SignUp = () => {\r\n    const {closeModal} = GetModalContext()\r\n    const validationSchema = yup.object().shape({\r\n        email: yup.string().email('Invalid Email').required(\"Required Field\"),\r\n        password: yup.string().required(\"Required Field\").min(6),\r\n        confirmPassword: yup.string().required(\"Required Field\").min(6).oneOf([yup.ref('password')], 'Passwords must match')\r\n    });\r\n    const { register, handleSubmit, control, formState: { errors } } = useForm({\r\n        resolver: yupResolver(validationSchema)\r\n    });\r\n    const onSubmit = (data) => {\r\n        auth.createUserWithEmailAndPassword(data.email, data.password).then((userCredential) => {\r\n            toast.success(\"SignUp Succesfull\", toastArray);\r\n        }\r\n        ).catch((error) => {\r\n            toast.error(error, toastArray);\r\n        })\r\n    \r\n    }\r\n  return (\r\n    <div className='flex flex-col w-full p-4'>\r\n            \r\n    <form id=\"hook-form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <FormInput\r\n            label='Email'\r\n            type='email'\r\n            name='email'\r\n            placeholder='Enter your email'\r\n            control={control}\r\n            error={errors?.email?.message}\r\n            required\r\n        />\r\n        <FormInput\r\n            label='Password'\r\n            type='password'\r\n            name='password'\r\n            placeholder='Enter your Password'\r\n            control={control}\r\n            error={errors?.password?.message}\r\n            required\r\n        />\r\n        <FormInput\r\n            label='Confirm Password'\r\n            type='password'\r\n            name='confirmPassword'\r\n            placeholder='Enter your Password again'\r\n            control={control}\r\n            error={errors?.confirmPassword?.message}\r\n            required\r\n        />\r\n    </form>\r\n    <button type='submit' form='hook-form' className='w-full border-2 bg-white p-3 mt-8 font-semibold shadow-lg rounded-lg'> Sign Up</button>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default SignUp","import React,{useState} from 'react'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup'\r\nimport {auth} from '../../firebaseCode'\r\nimport { useForm } from 'react-hook-form'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { toastArray } from \"./Toast\";\r\nimport { toast } from \"react-toastify\";\r\nimport {GetModalContext} from '../../context/ModalContext'\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport FormInput from './FormInput';\r\nimport { signInWithEmailAndPassword } from 'firebase/auth'\r\nimport { async } from '@firebase/util'\r\nconst SignIn = ({setSignInShow}) => {\r\n    const { closeModal } = GetModalContext()\r\n    const validationSchema = yup.object().shape({\r\n        email: yup.string().email('Invalid Email').required(\"Required Field\"),\r\n        password: yup.string().required(\"Required Field\").min(6)\r\n    });\r\n    const { register, handleSubmit, control, formState: { errors } } = useForm({\r\n        resolver: yupResolver(validationSchema)\r\n    });\r\n    const onSubmit = async(data) => {\r\n        try{\r\n        await signInWithEmailAndPassword(auth,data.email, data.password)\r\n        alert('sccdjf')\r\n        }catch(error) {\r\n            console.log(error,'not sign ined')\r\n            toast.error(error, toastArray);\r\n\r\n        }\r\n        \r\n    }\r\n  return (\r\n    <div className='flex flex-col w-full p-4'>\r\n            \r\n    <form id=\"hook-form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <FormInput\r\n            label='Email'\r\n            type='email'\r\n            name='email'\r\n            placeholder='Enter your email'\r\n            control={control}\r\n            error={errors?.email?.message}\r\n            required\r\n        />\r\n        <FormInput\r\n            label='Password'\r\n            type='password'\r\n            name='password'\r\n            placeholder='Enter your Password'\r\n            control={control}\r\n            error={errors?.password?.message}\r\n            required\r\n        />\r\n    </form>\r\n    <button type='submit' form='hook-form' className='w-full border-2 bg-white p-3 mt-8 font-semibold shadow-lg rounded-lg'> Sign In</button>\r\n    <ToastContainer />\r\n</div>\r\n  )\r\n}\r\n\r\nexport default SignIn","import React,{useState} from 'react'\r\n\r\nimport SignUp from '../LogIn/SignUp'\r\nimport SignIn from '../LogIn/SignIn'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { signInWithPopup, GoogleAuthProvider } from 'firebase/auth'\r\nimport { auth } from '../../firebaseCode'\r\nimport { useAuthState } from 'react-firebase-hooks/auth'\r\nconst SignSignUp = () => {\r\n    const [user] = useAuthState(auth);\r\n    const { closeModal } = GetModalContext()\r\n    const [signInShow, setSignInShow] = useState(true)\r\n    const googleProvider = new GoogleAuthProvider();\r\n    const signInWithGoogle = () => {\r\n        signInWithPopup(auth, googleProvider).then((result) => {\r\n            console.log(result)\r\n            alert('success')\r\n        }).catch((error) => {\r\n            alert(error)\r\n        })\r\n    }\r\n  return (\r\n    <div>\r\n            <div className='flex flex-row justify-end p-4'>\r\n                <RxCross1 className='cursor-pointer' onClick={closeModal} />\r\n            </div>\r\n            <div className='flex flex-col justify-center items-center'>\r\n                <h2>{signInShow ? \"Sign In \" : \"Sign Up\"}</h2>\r\n                {!signInShow ? <SignUp /> : <SignIn setSignInShow={setSignInShow}/>}\r\n                <div className='p-4 w-full'>\r\n                    <button onClick={signInWithGoogle} className='w-full border-2 bg-white p-3 font-semibold shadow-lg rounded-lg'> Sign In With Google</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default SignSignUp","import React from 'react'\r\n\r\nimport { GetModalContext } from '../context/ModalContext'\r\nimport { NewFolder, NewPlayGround, NewPlayGroundAndFolder, EditFolder, EditPlayGroundTitle, Loading } from './ModalTypes'\r\nimport InputFullScreen from './ModalTypes/InputFullScreen'\r\nimport OutputFullScreen from './ModalTypes/OutputFullScreen'\r\nimport SignSignUp from './ModalTypes/SignSignUp'\r\n\r\nconst Modal = () => {\r\n    const { isOpenModal } = GetModalContext()\r\n    const { modalType } = isOpenModal;\r\n  return (\r\n    <>\r\n    <div\r\n        className=\"justify-center items-center flex overflow-x-auto\r\n        overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\r\n    >\r\n        <div className=\"relative w-auto my-6 mx-auto  max-w-3xl\" onClick={e => {\r\n            e.stopPropagation();\r\n        }}>\r\n            <div className=\"border-0  rounded-lg shadow-lg relative flex flex-col sm:w-[30rem]\r\n             bg-white outline-none focus:outline-none w-auto\">\r\n                {modalType === 1 && <NewFolder />}\r\n                {modalType === 2 && <NewPlayGround />}\r\n                {modalType === 3 && <NewPlayGroundAndFolder />}\r\n                {modalType === 4 && <EditFolder />}\r\n                {modalType === 5 && <EditPlayGroundTitle />}\r\n                {modalType === 6 && <Loading />}\r\n                {modalType===7 && <SignSignUp/>}\r\n                {modalType===8 && <InputFullScreen/>}\r\n                {modalType===9 && <OutputFullScreen/>}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"  ></div>\r\n</>\r\n  )\r\n}\r\n\r\nexport default Modal"],"names":["closeModal","GetModalContext","addFolder","GetPlayGroundContext","useState","folderTitle","setFolderTitle","className","onClick","type","value","placeholder","onChange","e","target","isOpenModal","addPlayground","languageOptions","label","folderId","identifiers","cardTitle","setCardTitle","language","setLanguage","options","selectedOption","addPlaygroundAndFolder","playgroundName","setPlaygroundName","folderName","setFolderName","editFolderTitle","folders","console","log","title","editPlaygroundTitle","cardId","playgrounds","playgroundTitle","setPlaygroundTitle","currentInput","setCurrentInput","currentOutput","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAnalytics","getAuth","getFirestore","labelStrong","name","accept","control","required","props","htmlFor","render","field","id","error","toastArray","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","validationSchema","yup","shape","email","password","min","confirmPassword","oneOf","useForm","resolver","yupResolver","handleSubmit","register","errors","formState","onSubmit","data","createUserWithEmailAndPassword","then","userCredential","toast","catch","message","form","setSignInShow","signInWithEmailAndPassword","alert","useAuthState","signInShow","googleProvider","GoogleAuthProvider","signInWithPopup","result","modalType","stopPropagation"],"sourceRoot":""}