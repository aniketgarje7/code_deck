{"version":3,"file":"static/js/907.8f473f27.chunk.js","mappings":"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","sources":["component/Card.js","component/Home/RightPanel.js","component/Home/LeftPanel.js","component/ModalTypes/NewFolder.js","component/ModalTypes/NewPlayGround.js","component/ModalTypes/NewPlayGroundAndFolder.js","component/ModalTypes/EditFolder.js","component/ModalTypes/EditPlayGroundTitle.js","component/ModalTypes/Loading.js","component/Modal.js","pages/Home.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst Card = ({children}) => {\r\n  return (\r\n    <div className='hover:scale-105 last:w-full bg-white h-auto drop-shadow-2xl rounded-lg p-6 ease-in-out duration-500'>\r\n    {children}\r\n</div>\r\n  )\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\nimport { IoTrashOutline } from \"react-icons/io5\";\r\nimport { BiEditAlt } from \"react-icons/bi\";\r\nimport { FcOpenedFolder } from \"react-icons/fc\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Card from '../Card';\r\nimport {GetPlayGroundContext} from '../../context/PlaygroundContext'\r\n\r\nconst RightPanel = () => {\r\n    const navigate = useNavigate()\r\n    const { openModal } = GetModalContext()\r\n    const { folders, deleteFolder, deleteCard } = GetPlayGroundContext()\r\n    \r\n  return (\r\n    <div className='border-black h-screen p-8'>\r\n    <div className='flex justify-between placeholder:mt-8 items-center'>\r\n        <h2 > My <span className='font-semibold text-2xl'> PlayGround</span></h2>\r\n        <h4 className='cursor-pointer' onClick={() => openModal({\r\n            show: true,\r\n            modalType: 1,\r\n            identifiers: {\r\n                folderId: \"\",\r\n                cardId: \"\",\r\n            }\r\n        })}><span className='font-semibold text-2xl cursor-pointer'>+</span> New Folder</h4>\r\n    </div>\r\n    <hr className=\"mb-12 mt-4 bg-black\" />\r\n\r\n    {Object.entries(folders).map(([folderId, folder]) => (\r\n        <div className='flex-col flex my-8'>\r\n            <div className='flex justify-between placeholder:mt-8 items-center'>\r\n                <div className='flex gap-4 items-center'>\r\n                    <FcOpenedFolder size={'2em'} />\r\n                    <h5 className='semibold'> {folder.title}</h5>\r\n                </div>\r\n                <div className='flex gap-4 items-center'>\r\n                    <BiEditAlt className='cursor-pointer' size={'1.2em'} onClick={() => openModal({\r\n                        show: true,\r\n                        modalType: 4,\r\n                        identifiers: {\r\n                            folderId: folderId,\r\n                            cardId: \"\",\r\n                        }\r\n                    })} />\r\n                    <IoTrashOutline className='cursor-pointer' size={'1.2em'} onClick={() => deleteFolder(folderId)} />\r\n                    <h5 className='semibold cursor-pointer' onClick={() => openModal({\r\n                        show: true,\r\n                        modalType: 2,\r\n                        identifiers: {\r\n                            folderId: folderId,\r\n                            cardId: \"\",\r\n                        }\r\n                    })}\r\n                    ><span className='font-semibold text-2xl cursor-pointer'>+</span> {\" \"}New Playground</h5>\r\n                </div>\r\n            </div>\r\n            <hr class=\"mb-4 mt-4 bg-black\" />\r\n            <div class=\"grid grid-cols-1 md:grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                {Object.entries(folder['playgrounds']).map(([playgroundId, playground]) => (\r\n                    <Card key={playgroundId}>\r\n                        <div onClick={(e) => {\r\n                            e.stopPropagation(); //stop click propagation from child to parent\r\n                            console.log(folderId, playgroundId)\r\n                            navigate(`/playground/${folderId}/${playgroundId}`)\r\n                        }}\r\n                            className='flex items-center justify-between'>\r\n                            <div className='flex gap-4 items-center'>\r\n                                <img src='/logo-small.png' alt='' />\r\n                                <div>\r\n                                    <h6>{playground.title}</h6>\r\n                                    <h6>Language: {playground.language}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className='flex gap-4 items-center' onClick={(e) => {\r\n                                console.log('clicked')\r\n                                e.stopPropagation(); //stop click propagation from child to parent\r\n                            }}>\r\n                                <BiEditAlt size={'1.2em'} onClick={() => openModal({\r\n                                    show: true,\r\n                                    modalType: 5,\r\n                                    identifiers: {\r\n                                        folderId: folderId,\r\n                                        cardId: playgroundId,\r\n                                    }\r\n                                })} />\r\n                                <IoTrashOutline size={'1.2em'} onClick={() => deleteCard(folderId, playgroundId)} />\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    ))}\r\n</div>\r\n  )\r\n}\r\n\r\nexport default RightPanel","import React from 'react'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\n\r\nconst LeftPanel = () => {\r\n    const { openModal } = GetModalContext()\r\n  return (\r\n    <div className='border-2 border-black h-screen bg-black flex justify-end'>\r\n        <div className='mx-auto flex flex-col items-center justify-center gap-3 text-center' >\r\n            <img src='./logo.png' alt=''/>\r\n            <h3 className='font-semibold text-white'> Code Deck</h3>\r\n            <h4 className='font-semibold text-white'> Code. Compile. Debug</h4>\r\n            <button className='w-full p-4 bg-white shadow-lg rounded-full drop-shadow-2xl'\r\n           onClick={() => openModal({\r\n            show: true,\r\n            modalType: 3,\r\n            identifiers: {\r\n                folderId: \"\",\r\n                cardId: \"\"\r\n            }\r\n        })}>\r\n              + Create New Playground\r\n            </button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LeftPanel","import React,{useState} from 'react'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\nimport {GetPlayGroundContext} from '../../context/PlaygroundContext'\r\n\r\nconst NewFolder = () => {\r\n    const { closeModal } = GetModalContext()\r\n    const { addFolder } = GetPlayGroundContext()\r\n    const [folderTitle, setFolderTitle] = useState(\"\")\r\n  return (\r\n    <>\r\n    <div className='flex flex-row justify-end p-4' >\r\n      <RxCross1 className='cursor-pointer' onClick={() => closeModal()} />\r\n    </div>\r\n    <div className=' px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 '>\r\n      <h2> Create a New Folder</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={folderTitle}\r\n        placeholder=\"Please enter folder title\"\r\n        onChange={(e) => setFolderTitle(e.target.value)}\r\n        className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full'\r\n      />\r\n      <button\r\n      className='p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg'\r\n        onClick={() => {\r\n          addFolder(folderTitle);\r\n          closeModal();\r\n        }}\r\n      >\r\n        Create Folder\r\n      </button>\r\n    </div>\r\n\r\n  </>\r\n  )\r\n}\r\n\r\nexport default NewFolder","import React,{useState} from 'react'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\nimport {GetPlayGroundContext} from '../../context/PlaygroundContext'\r\nimport Select from 'react-select'\r\nconst NewPlayGround = () => {\r\n    const { isOpenModal, closeModal } = GetModalContext()\r\n  const { addPlayground } = GetPlayGroundContext()\r\n  const languageOptions = [\r\n    { value: 'javascript', label: 'javascript' },\r\n    { value: 'python', label: 'python' },\r\n    { value: 'java', label: 'java' },\r\n    { value: 'cpp', label: 'cpp' }\r\n  ];\r\n\r\n  const { folderId } = isOpenModal.identifiers;\r\n  const [cardTitle, setCardTitle] = useState(\"\");\r\n  const [language, setLanguage] = useState(languageOptions[0]);\r\n\r\n  const handleLanguageChange = (selectedOption) => {\r\n    setLanguage(selectedOption);\r\n  };\r\n  return (\r\n    <>\r\n    <div className='flex flex-row justify-end p-4' >\r\n      <RxCross1 className='cursor-pointer' onClick={() => closeModal()} />\r\n    </div>\r\n    <div className=' px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 '>\r\n      <h2> Create a New Playground</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={cardTitle}\r\n        placeholder=\"Please enter Playground title\"\r\n        onChange={(e) => setCardTitle(e.target.value)}\r\n        className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full'\r\n      />\r\n      <Select\r\n        options={languageOptions}\r\n        value={language}\r\n        onChange={handleLanguageChange}\r\n\r\n      />\r\n      <button\r\n        className='p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg'\r\n        onClick={() => {\r\n          addPlayground(folderId,cardTitle,language.value);\r\n          closeModal();\r\n        }}\r\n      >\r\n        Create PlayGround\r\n      </button>\r\n    </div>\r\n\r\n  </>\r\n  )\r\n}\r\n\r\nexport default NewPlayGround","import React,{useState} from 'react'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\nimport {GetPlayGroundContext} from '../../context/PlaygroundContext'\r\nimport Select from 'react-select'\r\n\r\n\r\nconst NewPlayGroundAndFolder = () => {\r\n    const {  closeModal } = GetModalContext()\r\n  const { addPlaygroundAndFolder } = GetPlayGroundContext()\r\n  const languageOptions = [\r\n    { value: 'javascript', label: 'javascript' },\r\n    { value: 'python', label: 'python' },\r\n    { value: 'java', label: 'java' },\r\n    { value: 'cpp', label: 'cpp' }\r\n  ];\r\n\r\n  const [playgroundName, setPlaygroundName] = useState(\"\");\r\n  const [folderName, setFolderName] = useState(\"\");\r\n  const [language, setLanguage] = useState(languageOptions[0]);\r\n  const handleLanguageChange = (selectedOption) => {\r\n    setLanguage(selectedOption);\r\n  };\r\n  return (\r\n    <>\r\n    <div className='flex flex-row justify-end p-4' >\r\n      <RxCross1 className='cursor-pointer' onClick={() => closeModal()} />\r\n    </div>\r\n    <div className=' px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 '>\r\n      <h2> Create a New Playground & New Folder</h2>\r\n      <div className='flex w-full'>\r\n\r\n        <label>Enter Folder Name</label>\r\n        <input\r\n          type=\"text\"\r\n          value={folderName}\r\n          placeholder=\"Please enter Playground title\"\r\n          onChange={(e) => setFolderName(e.target.value)}\r\n          className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full'\r\n        />\r\n      </div>\r\n      <div className='flex w-full'>\r\n        <label>Enter Playground Name</label>\r\n        <input\r\n          type=\"text\"\r\n          value={playgroundName}\r\n          placeholder=\"Please enter Playground title\"\r\n          onChange={(e) => setPlaygroundName(e.target.value)}\r\n          className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full '\r\n        />\r\n      </div>\r\n\r\n      <Select\r\n        options={languageOptions}\r\n        value={language}\r\n        onChange={handleLanguageChange}\r\n\r\n      />\r\n      <button\r\n        className='p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg'\r\n        onClick={() => {\r\n          addPlaygroundAndFolder(folderName, playgroundName, language.value);\r\n          closeModal();\r\n        }}\r\n      >\r\n        Create PlayGround And Folder\r\n      </button>\r\n    </div>\r\n\r\n  </>\r\n  )\r\n}\r\n\r\nexport default NewPlayGroundAndFolder","import React,{useState} from 'react'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\nimport {GetPlayGroundContext} from '../../context/PlaygroundContext'\r\nconst EditFolder = () => {\r\n    const{closeModal , isOpenModal} =GetModalContext()\r\n  const { editFolderTitle, folders } = GetPlayGroundContext\r\n\r\n  const folderId = isOpenModal.identifiers.folderId;\r\n  const [ folderTitle, setFolderTitle ] = useState(folders[folderId].title)\r\n  return (\r\n    <>\r\n    <div className='flex flex-row justify-end p-4' >\r\n      <RxCross1 className='cursor-pointer' onClick={() => closeModal()} />\r\n    </div>\r\n    <div className=' px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 '>\r\n      <h2> Edit Folder </h2>\r\n      <input\r\n        type=\"text\"\r\n        value={folderTitle}\r\n        placeholder=\"Please enter folder title\"\r\n        onChange={(e) => setFolderTitle(e.target.value)}\r\n        className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full'\r\n      />\r\n      <button\r\n        className='p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg'\r\n        onClick={() => {\r\n          editFolderTitle(folderId,folderTitle);\r\n          closeModal();\r\n        }}\r\n      >\r\n        Proceed\r\n      </button>\r\n    </div>\r\n\r\n  </>\r\n  )\r\n}\r\n\r\nexport default EditFolder","import React,{useState} from 'react'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\nimport {GetPlayGroundContext} from '../../context/PlaygroundContext'\r\n\r\nconst EditPlayGroundTitle = () => {\r\n    const { closeModal, isOpenModal } = GetModalContext()\r\n  const { editPlaygroundTitle, folders } = GetPlayGroundContext()\r\n\r\n  const {folderId ,cardId} = isOpenModal.identifiers;\r\n  const [playgroundTitle, setPlaygroundTitle] = useState(folders[folderId].playgrounds[cardId].title)\r\n  return (\r\n    <>\r\n    <div className='flex flex-row justify-end p-4' >\r\n      <RxCross1 className='cursor-pointer' onClick={() => closeModal()} />\r\n    </div>\r\n    <div className=' px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 '>\r\n      <h2> Edit Folder </h2>\r\n      <input\r\n        type=\"text\"\r\n        value={playgroundTitle}\r\n        placeholder=\"Please enter folder title\"\r\n        onChange={(e) => setPlaygroundTitle(e.target.value)}\r\n        className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full'\r\n      />\r\n      <button\r\n        className='p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg'\r\n        onClick={() => {\r\n          editPlaygroundTitle(folderId, cardId ,playgroundTitle);\r\n          closeModal();\r\n        }}\r\n      >\r\n        Proceed\r\n      </button>\r\n    </div>\r\n\r\n  </>\r\n  )\r\n}\r\n\r\nexport default EditPlayGroundTitle","import React from 'react'\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div>Loading...</div>\r\n  )\r\n}\r\n\r\nexport default Loading","import React from 'react'\r\n\r\nimport { GetModalContext } from '../context/ModalContext'\r\nimport { NewFolder, NewPlayGround, NewPlayGroundAndFolder, EditFolder, EditPlayGroundTitle, Loading } from './ModalTypes'\r\n\r\nconst Modal = () => {\r\n    const { isOpenModal } = GetModalContext()\r\n    const { modalType } = isOpenModal;\r\n  return (\r\n    <>\r\n    <div\r\n        className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\r\n    >\r\n        <div className=\"relative w-auto my-6 mx-auto max-w-3xl\" onClick={e => {\r\n            e.stopPropagation();\r\n        }}>\r\n            <div className=\"border-0  rounded-lg shadow-lg relative flex flex-col w-[30rem] bg-white outline-none focus:outline-none\">\r\n                {modalType === 1 && <NewFolder />}\r\n                {modalType === 2 && <NewPlayGround />}\r\n                {modalType === 3 && <NewPlayGroundAndFolder />}\r\n                {modalType === 4 && <EditFolder />}\r\n                {modalType === 5 && <EditPlayGroundTitle />}\r\n                {modalType === 6 && <Loading />}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"  ></div>\r\n</>\r\n  )\r\n}\r\n\r\nexport default Modal","import React from 'react'\r\nimport {GetModalContext} from '../context/ModalContext'\r\nimport RightPanel from '../component/Home/RightPanel'\r\nimport LeftPanel from '../component/Home/LeftPanel'\r\nimport Modal from '../component/Modal'\r\n\r\n\r\nconst Home = () => {\r\n\r\n\r\nconst { isOpenModal } = GetModalContext();\r\n  \r\n  return (\r\n    <>\r\n      <div class=\"grid grid-cols-1 md:grid-cols-1 lg:grid-cols-2 \">\r\n        <div className='md:w-full sm:w-full w-5/12'>\r\n          <LeftPanel />\r\n        </div>\r\n        <div className='md:w-full sm:w-full w-7/12'>\r\n          <RightPanel/>\r\n        </div>\r\n        {isOpenModal.show && <Modal />}\r\n\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home"],"names":["children","className","navigate","useNavigate","openModal","GetModalContext","GetPlayGroundContext","folders","deleteFolder","deleteCard","onClick","show","modalType","identifiers","folderId","cardId","Object","entries","map","folder","size","title","class","playgroundId","playground","e","stopPropagation","console","log","src","alt","language","closeModal","addFolder","useState","folderTitle","setFolderTitle","type","value","placeholder","onChange","target","isOpenModal","addPlayground","languageOptions","label","cardTitle","setCardTitle","setLanguage","options","selectedOption","addPlaygroundAndFolder","playgroundName","setPlaygroundName","folderName","setFolderName","editFolderTitle","editPlaygroundTitle","playgrounds","playgroundTitle","setPlaygroundTitle"],"sourceRoot":""}