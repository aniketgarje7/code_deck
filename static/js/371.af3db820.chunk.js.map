{"version":3,"file":"static/js/371.af3db820.chunk.js","mappings":"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","sources":["component/ModalTypes/NewFolder.js","component/ModalTypes/NewPlayGround.js","component/ModalTypes/NewPlayGroundAndFolder.js","component/ModalTypes/EditFolder.js","component/ModalTypes/EditPlayGroundTitle.js","component/ModalTypes/Loading.js","component/Modal.js","component/Card.js","component/Home/RightPanel.js","component/Home/LeftPanel.js","pages/Home.js"],"sourcesContent":["import React,{useState} from 'react'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\nimport {GetPlayGroundContext} from '../../context/PlaygroundContext'\r\n\r\nconst NewFolder = () => {\r\n    const { closeModal } = GetModalContext()\r\n    const { addFolder } = GetPlayGroundContext()\r\n    const [folderTitle, setFolderTitle] = useState(\"\")\r\n  return (\r\n    <>\r\n    <div className='flex flex-row justify-end p-4' >\r\n      <RxCross1 className='cursor-pointer' onClick={() => closeModal()} />\r\n    </div>\r\n    <div className=' px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 '>\r\n      <h2> Create a New Folder</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={folderTitle}\r\n        placeholder=\"Please enter folder title\"\r\n        onChange={(e) => setFolderTitle(e.target.value)}\r\n        className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full'\r\n      />\r\n      <button\r\n      className='p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg'\r\n        onClick={() => {\r\n          addFolder(folderTitle);\r\n          closeModal();\r\n        }}\r\n      >\r\n        Create Folder\r\n      </button>\r\n    </div>\r\n\r\n  </>\r\n  )\r\n}\r\n\r\nexport default NewFolder","import React,{useState} from 'react'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\nimport {GetPlayGroundContext} from '../../context/PlaygroundContext'\r\nimport Select from 'react-select'\r\nconst NewPlayGround = () => {\r\n    const { isOpenModal, closeModal } = GetModalContext()\r\n  const { addPlayground } = GetPlayGroundContext()\r\n  const languageOptions = [\r\n    { value: 'javascript', label: 'javascript' },\r\n    { value: 'python', label: 'python' },\r\n    { value: 'java', label: 'java' },\r\n    { value: 'cpp', label: 'cpp' }\r\n  ];\r\n\r\n  const { folderId } = isOpenModal.identifiers;\r\n  const [cardTitle, setCardTitle] = useState(\"\");\r\n  const [language, setLanguage] = useState(languageOptions[0]);\r\n\r\n  const handleLanguageChange = (selectedOption) => {\r\n    setLanguage(selectedOption);\r\n  };\r\n  return (\r\n    <>\r\n    <div className='flex flex-row justify-end p-4' >\r\n      <RxCross1 className='cursor-pointer' onClick={() => closeModal()} />\r\n    </div>\r\n    <div className=' px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 '>\r\n      <h2> Create a New Playground</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={cardTitle}\r\n        placeholder=\"Please enter Playground title\"\r\n        onChange={(e) => setCardTitle(e.target.value)}\r\n        className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full'\r\n      />\r\n      <Select\r\n        options={languageOptions}\r\n        value={language}\r\n        onChange={handleLanguageChange}\r\n\r\n      />\r\n      <button\r\n        className='p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg'\r\n        onClick={() => {\r\n          addPlayground(folderId,cardTitle,language.value);\r\n          closeModal();\r\n        }}\r\n      >\r\n        Create PlayGround\r\n      </button>\r\n    </div>\r\n\r\n  </>\r\n  )\r\n}\r\n\r\nexport default NewPlayGround","import React,{useState} from 'react'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\nimport {GetPlayGroundContext} from '../../context/PlaygroundContext'\r\nimport Select from 'react-select'\r\n\r\n\r\nconst NewPlayGroundAndFolder = () => {\r\n    const {  closeModal } = GetModalContext()\r\n  const { addPlaygroundAndFolder } = GetPlayGroundContext()\r\n  const languageOptions = [\r\n    { value: 'javascript', label: 'javascript' },\r\n    { value: 'python', label: 'python' },\r\n    { value: 'java', label: 'java' },\r\n    { value: 'cpp', label: 'cpp' }\r\n  ];\r\n\r\n  const [playgroundName, setPlaygroundName] = useState(\"\");\r\n  const [folderName, setFolderName] = useState(\"\");\r\n  const [language, setLanguage] = useState(languageOptions[0]);\r\n  const handleLanguageChange = (selectedOption) => {\r\n    setLanguage(selectedOption);\r\n  };\r\n  return (\r\n    <>\r\n    <div className='flex flex-row justify-end p-4' >\r\n      <RxCross1 className='cursor-pointer' onClick={() => closeModal()} />\r\n    </div>\r\n    <div className=' px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 '>\r\n      <h2> Create a New Playground & New Folder</h2>\r\n      <div className='flex w-full'>\r\n\r\n        <label>Enter Folder Name</label>\r\n        <input\r\n          type=\"text\"\r\n          value={folderName}\r\n          placeholder=\"Please enter Playground title\"\r\n          onChange={(e) => setFolderName(e.target.value)}\r\n          className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full'\r\n        />\r\n      </div>\r\n      <div className='flex w-full'>\r\n        <label>Enter Playground Name</label>\r\n        <input\r\n          type=\"text\"\r\n          value={playgroundName}\r\n          placeholder=\"Please enter Playground title\"\r\n          onChange={(e) => setPlaygroundName(e.target.value)}\r\n          className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full '\r\n        />\r\n      </div>\r\n\r\n      <Select\r\n        options={languageOptions}\r\n        value={language}\r\n        onChange={handleLanguageChange}\r\n\r\n      />\r\n      <button\r\n        className='p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg'\r\n        onClick={() => {\r\n          addPlaygroundAndFolder(folderName, playgroundName, language.value);\r\n          closeModal();\r\n        }}\r\n      >\r\n        Create PlayGround And Folder\r\n      </button>\r\n    </div>\r\n\r\n  </>\r\n  )\r\n}\r\n\r\nexport default NewPlayGroundAndFolder","import React,{useState} from 'react'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\nimport {GetPlayGroundContext} from '../../context/PlaygroundContext'\r\nconst EditFolder = () => {\r\n    const{closeModal , isOpenModal} =GetModalContext()\r\n  const { editFolderTitle, folders } = GetPlayGroundContext\r\n\r\n  const folderId = isOpenModal.identifiers.folderId;\r\n  const [ folderTitle, setFolderTitle ] = useState(folders[folderId].title)\r\n  return (\r\n    <>\r\n    <div className='flex flex-row justify-end p-4' >\r\n      <RxCross1 className='cursor-pointer' onClick={() => closeModal()} />\r\n    </div>\r\n    <div className=' px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 '>\r\n      <h2> Edit Folder </h2>\r\n      <input\r\n        type=\"text\"\r\n        value={folderTitle}\r\n        placeholder=\"Please enter folder title\"\r\n        onChange={(e) => setFolderTitle(e.target.value)}\r\n        className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full'\r\n      />\r\n      <button\r\n        className='p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg'\r\n        onClick={() => {\r\n          editFolderTitle(folderId,folderTitle);\r\n          closeModal();\r\n        }}\r\n      >\r\n        Proceed\r\n      </button>\r\n    </div>\r\n\r\n  </>\r\n  )\r\n}\r\n\r\nexport default EditFolder","import React,{useState} from 'react'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\nimport {GetPlayGroundContext} from '../../context/PlaygroundContext'\r\n\r\nconst EditPlayGroundTitle = () => {\r\n    const { closeModal, isOpenModal } = GetModalContext()\r\n  const { editPlaygroundTitle, folders } = GetPlayGroundContext()\r\n\r\n  const {folderId ,cardId} = isOpenModal.identifiers;\r\n  const [playgroundTitle, setPlaygroundTitle] = useState(folders[folderId].playgrounds[cardId].title)\r\n  return (\r\n    <>\r\n    <div className='flex flex-row justify-end p-4' >\r\n      <RxCross1 className='cursor-pointer' onClick={() => closeModal()} />\r\n    </div>\r\n    <div className=' px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6 '>\r\n      <h2> Edit Folder </h2>\r\n      <input\r\n        type=\"text\"\r\n        value={playgroundTitle}\r\n        placeholder=\"Please enter folder title\"\r\n        onChange={(e) => setPlaygroundTitle(e.target.value)}\r\n        className='border-[.5px] text-sm  border-gray  rounded-lg shadow-sm  p-2 w-full'\r\n      />\r\n      <button\r\n        className='p-3 w-36 text-black bg-white rounded-lg font-semibold bg-darkBlue border-[0.5px] border-gray shadow-lg'\r\n        onClick={() => {\r\n          editPlaygroundTitle(folderId, cardId ,playgroundTitle);\r\n          closeModal();\r\n        }}\r\n      >\r\n        Proceed\r\n      </button>\r\n    </div>\r\n\r\n  </>\r\n  )\r\n}\r\n\r\nexport default EditPlayGroundTitle","import React from 'react'\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div>Loading...</div>\r\n  )\r\n}\r\n\r\nexport default Loading","import React from 'react'\r\n\r\nimport { GetModalContext } from '../context/ModalContext'\r\nimport { NewFolder, NewPlayGround, NewPlayGroundAndFolder, EditFolder, EditPlayGroundTitle, Loading } from './ModalTypes'\r\n\r\nconst Modal = () => {\r\n    const { isOpenModal } = GetModalContext()\r\n    const { modalType } = isOpenModal;\r\n  return (\r\n    <>\r\n    <div\r\n        className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\r\n    >\r\n        <div className=\"relative w-auto my-6 mx-auto max-w-3xl\" onClick={e => {\r\n            e.stopPropagation();\r\n        }}>\r\n            <div className=\"border-0  rounded-lg shadow-lg relative flex flex-col w-[30rem] bg-white outline-none focus:outline-none\">\r\n                {modalType === 1 && <NewFolder />}\r\n                {modalType === 2 && <NewPlayGround />}\r\n                {modalType === 3 && <NewPlayGroundAndFolder />}\r\n                {modalType === 4 && <EditFolder />}\r\n                {modalType === 5 && <EditPlayGroundTitle />}\r\n                {modalType === 6 && <Loading />}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"  ></div>\r\n</>\r\n  )\r\n}\r\n\r\nexport default Modal","import React from 'react'\r\n\r\nconst Card = ({children}) => {\r\n \r\n  return (\r\n    <div className='hover:scale-105 last:w-full bg-white h-auto drop-shadow-2xl rounded-lg p-6 ease-in-out duration-500'>\r\n    {children}\r\n</div>\r\n  )\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\nimport { IoTrashOutline } from \"react-icons/io5\";\r\nimport { BiEditAlt } from \"react-icons/bi\";\r\nimport { FcOpenedFolder } from \"react-icons/fc\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Card from '../Card';\r\nimport {GetPlayGroundContext} from '../../context/PlaygroundContext'\r\nimport logoSmall from './logo-small.png'\r\n\r\nconst RightPanel = () => {\r\n    const navigate = useNavigate()\r\n    const { openModal } = GetModalContext()\r\n    const { folders, deleteFolder, deleteCard } = GetPlayGroundContext()\r\n    console.log(folders)\r\n  return (\r\n    <div className='border-black h-screen p-8'>\r\n    <div className='flex justify-between placeholder:mt-8 items-center'>\r\n        <h2 > My <span className='font-semibold text-2xl'> PlayGround</span></h2>\r\n        <h4 className='cursor-pointer' onClick={() => openModal({\r\n            show: true,\r\n            modalType: 1,\r\n            identifiers: {\r\n                folderId: \"\",\r\n                cardId: \"\",\r\n            }\r\n        })}><span className='font-semibold text-2xl cursor-pointer'>+</span> New Folder</h4>\r\n    </div>\r\n    <hr className=\"mb-12 mt-4 bg-black\" />\r\n\r\n    {Object.entries(folders).map(([folderId, folder]) => (\r\n        <div className='flex-col flex my-8'>\r\n            <div className='flex justify-between placeholder:mt-8 items-center'>\r\n                <div className='flex gap-4 items-center'>\r\n                    <FcOpenedFolder size={'2em'} />\r\n                    <h5 className='semibold'> {folder.title}</h5>\r\n                </div>\r\n                <div className='flex gap-4 items-center'>\r\n                    <BiEditAlt className='cursor-pointer' size={'1.2em'} onClick={() => openModal({\r\n                        show: true,\r\n                        modalType: 4,\r\n                        identifiers: {\r\n                            folderId: folderId,\r\n                            cardId: \"\",\r\n                        }\r\n                    })} />\r\n                    <IoTrashOutline className='cursor-pointer' size={'1.2em'} onClick={() => deleteFolder(folderId)} />\r\n                    <h5 className='semibold cursor-pointer' onClick={() => openModal({\r\n                        show: true,\r\n                        modalType: 2,\r\n                        identifiers: {\r\n                            folderId: folderId,\r\n                            cardId: \"\",\r\n                        }\r\n                    })}\r\n                    ><span className='font-semibold text-2xl cursor-pointer'>+</span> {\" \"}New Playground</h5>\r\n                </div>\r\n            </div>\r\n            <hr class=\"mb-4 mt-4 bg-black\" />\r\n            <div class=\"grid grid-cols-1 md:grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                {Object.entries(folder['playgrounds']).map(([playgroundId, playground]) => (\r\n                    <Card key={playgroundId}>\r\n                        <div onClick={(e) => {\r\n                            e.stopPropagation(); \r\n                            \r\n                            navigate(`/playground/${folderId}/${playgroundId}`)\r\n                        }}\r\n                            className='flex items-center justify-between'>\r\n                            <div className='flex gap-4 items-center'>\r\n                                <img src={logoSmall} alt='' />\r\n                                <div>\r\n                                    <h6>{playground.title}</h6>\r\n                                    <h6>Language: {playground.language}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <div className='flex gap-4 items-center' onClick={(e) => {\r\n                                \r\n                                e.stopPropagation(); \r\n                            }}>\r\n                                <BiEditAlt size={'1.2em'} onClick={() => openModal({\r\n                                    show: true,\r\n                                    modalType: 5,\r\n                                    identifiers: {\r\n                                        folderId: folderId,\r\n                                        cardId: playgroundId,\r\n                                    }\r\n                                })} />\r\n                                <IoTrashOutline size={'1.2em'} onClick={() => deleteCard(folderId, playgroundId)} />\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    ))}\r\n</div>\r\n  )\r\n}\r\n\r\nexport default RightPanel","import React from 'react'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\nimport logo from './logo.png'\r\nconst LeftPanel = () => {\r\n    const { openModal } = GetModalContext()\r\n  return (\r\n    <div className='border-2 border-black h-screen bg-black flex justify-end text-center '>\r\n        <div className='mx-auto flex flex-col items-center justify-center gap-3 text-center' >\r\n            <img src={logo} alt=''/>\r\n            <h3 className='font-semibold text-white'> Code Deck</h3>\r\n            <h4 className='font-semibold text-white'> Code. Compile. Debug</h4>\r\n            <button className='w-full p-4 bg-white shadow-lg rounded-full drop-shadow-2xl'\r\n           onClick={() => openModal({\r\n            show: true,\r\n            modalType: 3,\r\n            identifiers: {\r\n                folderId: \"\",\r\n                cardId: \"\"\r\n            }\r\n        })}>\r\n              + Create New Playground\r\n            </button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LeftPanel","import React from 'react'\r\nimport {GetModalContext} from '../context/ModalContext'\r\nimport RightPanel from '../component/Home/RightPanel'\r\nimport LeftPanel from '../component/Home/LeftPanel'\r\nimport Modal from '../component/Modal'\r\n\r\n\r\nconst Home = () => {\r\n\r\n\r\nconst { isOpenModal } = GetModalContext();\r\n  console.log(isOpenModal.show)\r\n  return (\r\n    <>\r\n      <div class=\"grid grid-cols-1 md:grid-cols-1 lg:grid-cols-2 sm:h-screen \">\r\n        <div className='lg:w-24rem  md:w-full sm:w-screen    '>\r\n          <LeftPanel />\r\n        </div>\r\n        <div className='lg:w-24rem md:w-full sm:w-full     '>\r\n          <RightPanel/>\r\n        </div>\r\n        {isOpenModal.show && <Modal />}\r\n\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home"],"names":["closeModal","GetModalContext","addFolder","GetPlayGroundContext","useState","folderTitle","setFolderTitle","className","onClick","type","value","placeholder","onChange","e","target","isOpenModal","addPlayground","languageOptions","label","folderId","identifiers","cardTitle","setCardTitle","language","setLanguage","options","selectedOption","addPlaygroundAndFolder","playgroundName","setPlaygroundName","folderName","setFolderName","editFolderTitle","folders","title","editPlaygroundTitle","cardId","playgrounds","playgroundTitle","setPlaygroundTitle","modalType","stopPropagation","children","navigate","useNavigate","openModal","deleteFolder","deleteCard","console","log","show","Object","entries","map","folder","size","class","playgroundId","playground","src","logoSmall","alt","logo","Modal"],"sourceRoot":""}