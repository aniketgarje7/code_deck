{"version":3,"file":"static/js/313.9b335ca4.chunk.js","mappings":"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","sources":["component/PlayGround/Navbar.js","component/PlayGround/CodeEditor.js","component/PlayGround/EditContainer.js","component/PlayGround/OutputConsole.js","component/PlayGround/InputConsol.js","pages/PlayGround.js"],"sourcesContent":["import React from 'react'\r\nimport logo from '../Home/logo-small.png'\r\n\r\nconst Navbar = ({isFullScreen}) => {\r\n  return (\r\n    <div className={`relative ${isFullScreen ?\"h-0\":\"h-16\"} bg-black flex justify-center items-center gap-4`}>\r\n    <img className='w-16' src={logo} alt='' />\r\n    <div className='text-white text-2xl'>\r\n      Code Deck\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Navbar","import React,{useState,useEffect} from 'react'\r\nimport CodeMirror from '@uiw/react-codemirror'\r\nimport { githubDark, githubLight } from '@uiw/codemirror-theme-github';\r\nimport { bespin } from '@uiw/codemirror-theme-bespin';\r\nimport { duotoneDark, duotoneLight } from '@uiw/codemirror-theme-duotone';\r\nimport { dracula } from '@uiw/codemirror-theme-dracula';\r\nimport { xcodeDark, xcodeLight } from '@uiw/codemirror-theme-xcode';\r\nimport { vscodeDark } from '@uiw/codemirror-theme-vscode';\r\nimport { okaidia } from '@uiw/codemirror-theme-okaidia';\r\nimport { cpp } from '@codemirror/lang-cpp'\r\nimport { java } from '@codemirror/lang-java'\r\nimport { javascript } from '@codemirror/lang-javascript'\r\nimport { python } from '@codemirror/lang-python'\r\nimport { indentUnit } from '@codemirror/language'\r\nimport { EditorState } from '@codemirror/state'\r\n\r\n\r\nconst CodeEditor = ( {\r\n    currentLanguage,\r\n    currentTheme,\r\n    currentCode,\r\n    setCurrentCode,\r\n    isFullScreen\r\n}\r\n) => {\r\n    const [theme, setTheme] = useState(githubDark);\r\n    const [language, setLanguage] = useState(javascript);\r\n\r\n   useEffect(()=>{\r\n    switch(currentTheme){\r\n        case 'githubDark':\r\n            setTheme(githubDark)\r\n            break;\r\n        case 'githubLight':\r\n            setTheme(githubLight)\r\n            break;\r\n        case 'bespin':\r\n            setTheme(bespin)\r\n            break;\r\n        case 'duaotoneDark':\r\n            setTheme(duotoneDark)\r\n            break;\r\n        case 'duaotoneLight':\r\n            setTheme(duotoneLight)\r\n            break;\r\n        case 'dracula':\r\n            setTheme(dracula)\r\n            break;\r\n        case 'xcodeDark':\r\n            setTheme(xcodeDark)\r\n            break;\r\n        case 'xcodeLight':\r\n            setTheme(xcodeLight)\r\n            break;\r\n        case 'vscodeDark':\r\n            setTheme(vscodeDark)\r\n            break;\r\n        case 'okaidia':\r\n            setTheme(okaidia)\r\n            break;        \r\n        default:\r\n            setTheme(githubDark)\r\n    }\r\n   },[currentTheme])\r\n    useEffect(() => {\r\n        switch (currentLanguage) {\r\n            case 'javascript':\r\n                setLanguage(javascript);\r\n                break;\r\n            case 'python':\r\n                setLanguage(python);\r\n                break;\r\n            case 'cpp':\r\n                setLanguage(cpp);\r\n                break;\r\n            case 'java':\r\n                setLanguage(java);\r\n                break;\r\n            default:\r\n                setLanguage(javascript);\r\n        }\r\n    }, [currentLanguage])\r\n\r\n  return (\r\n    <>\r\n     <CodeMirror\r\n            value={currentCode}\r\n            height={`${isFullScreen?\"92vh\":\"76vh\"}`}\r\n            theme={theme}\r\n            extensions={[\r\n                language,\r\n                indentUnit.of(\"        \"),\r\n                EditorState.tabSize.of(8),\r\n                EditorState.changeFilter.of(() => true)\r\n            ]}\r\n            onChange={(value) => setCurrentCode(value)}\r\n            basicSetup={{\r\n                lineNumbers: true,\r\n                highlightActiveLineGutter: true,\r\n                highlightSpecialChars: true,\r\n                history: true,\r\n                foldGutter: true,\r\n                drawSelection: true,\r\n                dropCursor: true,\r\n                allowMultipleSelections: true,\r\n                indentOnInput: true,\r\n                syntaxHighlighting: true,\r\n                bracketMatching: true,\r\n                closeBrackets: true,\r\n                autocompletion: true,\r\n                rectangularSelection: true,\r\n                crosshairCursor: true,\r\n                highlightActiveLine: true,\r\n                highlightSelectionMatches: true,\r\n                closeBracketsKeymap: true,\r\n                defaultKeymap: true,\r\n                searchKeymap: true,\r\n                historyKeymap: true,\r\n                foldKeymap: true,\r\n                completionKeymap: true,\r\n                lintKeymap: true,\r\n            }}\r\n        />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CodeEditor","import React,{useState} from 'react'\r\nimport { GetModalContext } from '../../context/ModalContext';\r\nimport { BiEditAlt, BiImport, BiExport, BiFullscreen } from 'react-icons/bi'\r\nimport Select from 'react-select';\r\nimport CodeEditor from './CodeEditor';\r\nimport { languageMap } from '../../context/PlaygroundContext';\r\n\r\nconst EditContainer = ({\r\n    title,\r\n    currentLanguage,\r\n    setCurrentLanguage,\r\n    currentCode,\r\n    setCurrentCode,\r\n    folderId,\r\n    playgroundId,\r\n    saveCode,\r\n    runCode,\r\n    getFile,\r\n    isFullScreen,\r\n    setIsFullScreen\r\n}) => {\r\n    const { openModal } = GetModalContext()\r\n\r\n    const themeOptions = [\r\n        { value: 'githuDark', label: 'Github Dark' },\r\n        { value: 'githubLight', label: 'Github Light' },\r\n        { value: 'bespin', label: 'Bespin' },\r\n        { value: 'duaotoneDark', label: 'Duotone Dark' },\r\n        { value: 'duaotoneLight', label: 'Duotone Light' },\r\n        { value: \"dracula\", label: 'Dracula' },\r\n        { value: \"xcodeDark\", label: 'Xcode Dark' },\r\n        { value: \"xcodeLight\", label: 'Xcode Light' },\r\n        { value: 'vscodeDark', label: 'Vscode Dark' },\r\n        { value: 'vscodeLight', label: 'Vscode Light' },\r\n        { value: 'okaidia', label: 'Okaidia' }\r\n    ];\r\n\r\n    const languageOptions = [\r\n        { value: 'cpp', label: 'C++' },\r\n        { value: 'javascript', label: 'Javascript' },\r\n        { value: 'python', label: 'Python' },\r\n        { value: 'java', label: 'Java' },\r\n    ];\r\n    const handleThemeChange = (selectedOption) => {\r\n        setCurrentTheme(selectedOption)\r\n    }\r\n    const handleLanguageChange = (selectedOption) => {\r\n        setLanguage(selectedOption)\r\n        setCurrentLanguage(selectedOption.value)\r\n        setCurrentCode(languageMap[selectedOption.value].defaultCode)\r\n    }\r\n    const [currentTheme, setCurrentTheme] = useState(themeOptions[0]);\r\n    const [language, setLanguage] = useState(() => {\r\n        for (let i = 0; i < languageOptions.length; i++) {\r\n            if (languageOptions[i].value === currentLanguage) {\r\n                return languageOptions[i];\r\n            }\r\n        }\r\n        return languageOptions[0];\r\n    });\r\n\r\n  return (\r\n    <div className={`flex flex-col  ${isFullScreen ? 'h-[100vh]' : 'h-[calc(100vh - 4.5rem)]'}`}>\r\n            {\r\n                !isFullScreen &&\r\n                <div className='bg-white flex justify-between items-center flex-wrap p-4'>\r\n                    <div className='flex gap-4 items-center'>\r\n                        <h3 className='font-semibold'> {title}</h3>\r\n                        <BiEditAlt style={{ fontSize: \"1.5rem\" }} className='cursor-pointer' onClick={() => openModal({\r\n                            show: true,\r\n                            modalType: 5,\r\n                            identifiers: {\r\n                                folderId: folderId,\r\n                                cardId: playgroundId,\r\n                            }\r\n                        })} />\r\n                        <button className=' font-normal  rounded-full p-2 bg-[#0097d7] '  onClick={saveCode}>\r\n                            Save code\r\n                        </button>\r\n                    </div>\r\n                    <div className='flex gap-4'>\r\n                        <Select\r\n                            options={languageOptions}\r\n                            value={language}\r\n                            onChange={handleLanguageChange}\r\n                        />\r\n                        <Select\r\n                            options={themeOptions}\r\n                            value={currentTheme}\r\n                            onChange={handleThemeChange}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n            }\r\n                <CodeEditor\r\n                    currentLanguage={currentLanguage}\r\n                    currentTheme={currentTheme.value}\r\n                    currentCode={currentCode}\r\n                    setCurrentCode={setCurrentCode}\r\n                    isFullScreen={isFullScreen}\r\n                    \r\n                />\r\n\r\n                <div className='bg-white flex w-full justify-between p-4  '>\r\n                    <button className=\"flex gap-3 items-center\" onClick={() => setIsFullScreen((isFullScreen) => !isFullScreen)}>\r\n                        <BiFullscreen style={{ fontSize: \"1.5rem\" }} /> {isFullScreen ? 'Minimize Screen' : 'Full Screen'}\r\n                    </button>\r\n\r\n                    <label className=\"flex gap-3 items-center\" htmlFor=\"codefile\">\r\n                        <input className=\"hidden\" type=\"file\" accept=\".\" id=\"codefile\" \r\n                        onChange={(e) => getFile(e, setCurrentCode)} /> \r\n                        <BiImport style={{ fontSize: \"1.5rem\" }} /> Import Code\r\n                    </label>\r\n\r\n                    <a className=\"flex gap-3 items-center\" href={`data:text/plain;charset=utf-8,${encodeURIComponent(currentCode)}`} download=\"code.txt\">\r\n                        <BiExport style={{ fontSize: \"1.5rem\" }} /> Export Code\r\n                    </a>\r\n                    <button onClick={runCode} className=' font-normal  rounded-full p-2 bg-[#0097d7]'>\r\n                        Run code\r\n                    </button>\r\n                </div>\r\n\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default EditContainer","import React from 'react'\r\nimport { BiExport ,BiFullscreen} from 'react-icons/bi'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\n\r\nconst OutputConsole = () => {\r\n  const {openModal,currentOutput} = GetModalContext()\r\n  return (\r\n    <div className='flex flex-col'>\r\n    <div className='bg-[#ededed] p-4 flex justify-between'>\r\n      <h3 className='font-bold flex justify-center'>Output : \r\n      {/* <BiFullscreen style={{fontSize:'1.5rem'}} onClick={()=>openModal({\r\n                      show:true,\r\n                      modalType:9,\r\n                      identifiers:{\r\n                        folderId:\"\",\r\n                        cardId:\"\"\r\n                      }})}/>*/}\r\n                       </h3>\r\n      <a className='flex font-semibold gap-4'\r\n        href={`data:text/plain;charset=utf-8,${encodeURIComponent(currentOutput)}`} download=\"output.txt\">\r\n        <BiExport className='text-2xl' /> Export Output\r\n      </a>\r\n    </div>\r\n    <textarea\r\n    className='h-[calc(50vh_-_8rem)] resize-none'\r\n    value={currentOutput}\r\n    disabled\r\n    />\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default OutputConsole","import React from 'react'\r\nimport { BiImport ,BiFullscreen} from 'react-icons/bi'\r\nimport { GetModalContext } from '../../context/ModalContext'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst InputConsol = ({  getFile}) => {\r\n  const {openModal,currentInput,setCurrentInput}  = GetModalContext()\r\n  const {folderId} = useParams();\r\n  return (\r\n    <div className='flex flex-col'>\r\n            <div className='bg-[#ededed] p-4 flex justify-between'>\r\n                <h3 className='font-bold flex justify-center'>Input :  \r\n                {/* <BiFullscreen style={{fontSize:'1.5rem'}} onClick={()=>openModal({\r\n                      show:true,\r\n                      modalType:8,\r\n                      identifiers:{\r\n                        folderId:folderId,\r\n                        cardId:\"\"\r\n                      }})}  />*/}\r\n                      </h3> \r\n               \r\n                <label htmlFor=\"inputfile\" className='flex items-center font-semibold gap-3'>\r\n                    <input className=\"hidden\" type=\"file\" accept=\".\" id=\"inputfile\" onChange={(e) => getFile(e, setCurrentInput)} /> \r\n                    <BiImport style={{ fontSize: \"1.5rem\" }} \r\n                    /> Import Input\r\n                </label>\r\n                \r\n            </div>\r\n            <textarea className='h-[calc(50vh_-_4rem)] resize-none' onChange={(e) => setCurrentInput(e.target.value)}\r\n                value={currentInput} />\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default InputConsol","import React,{useState} from 'react'\r\nimport Navbar from '../component/PlayGround/Navbar'\r\nimport EditContainer from '../component/PlayGround/EditContainer'\r\nimport Modal from '../component/Modal'\r\nimport OutputConsol from '../component/PlayGround/OutputConsole'\r\nimport InputConsol from '../component/PlayGround/InputConsol'\r\nimport axios from 'axios'\r\nimport { Buffer  } from 'buffer'\r\nimport { useParams } from 'react-router-dom'\r\nimport { GetModalContext } from '../context/ModalContext'\r\nimport { GetPlayGroundContext,languageMap } from '../context/PlaygroundContext'\r\nconst PlayGround = () => {\r\n  const {folderId,playgroundId} = useParams();\r\n  const { folders, savePlayground } = GetPlayGroundContext()\r\n  const { isOpenModal, openModal, closeModal,currentInput,setCurrentOutput } = GetModalContext()\r\n  const { title, language, code } = folders[folderId].playgrounds[playgroundId]\r\n\r\n  const [currentLanguage, setCurrentLanguage] = useState(language)\r\n  const [currentCode, setCurrentCode] = useState(code)\r\n  // const [currentInput, setCurrentInput] = useState('')\r\n  \r\n  const [isFullScreen, setIsFullScreen] = useState(false);\r\n\r\n\r\n  const encode = (str) => {\r\n    return Buffer.from(str, \"binary\").toString(\"base64\")\r\n  }\r\n\r\n  const decode = (str) => {\r\n    return Buffer.from(str, 'base64').toString()\r\n  }\r\n\r\n  const saveCode = () => {\r\n    savePlayground(folderId, playgroundId, currentCode, currentLanguage)\r\n  }\r\n\r\n  const postSubmission = async (language_id, source_code, stdin) => {\r\n    const options = {\r\n      method: 'POST',\r\n      url: 'https://judge0-ce.p.rapidapi.com/submissions',\r\n      params: { base64_encoded: 'true', fields: '*' },\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'X-RapidAPI-Key': 'b4e5c5a05fmsh9adf6ec091523f8p165338jsncc58f31c26e1',\r\n        'X-RapidAPI-Host': 'judge0-ce.p.rapidapi.com'\r\n      },\r\n      data: JSON.stringify({\r\n        language_id: language_id,\r\n        source_code: source_code,\r\n        stdin: stdin\r\n      })\r\n    };\r\n\r\n    const res = await axios.request(options);\r\n    return res.data.token\r\n  }\r\n\r\n\r\n  const getOutput = async (token) => {\r\n    \r\n    const options = {\r\n      method: 'GET',\r\n      url: \"https://judge0-ce.p.rapidapi.com/submissions/\" + token,\r\n      params: { base64_encoded: 'true', fields: '*' },\r\n      headers: {\r\n        'X-RapidAPI-Key': 'b4e5c5a05fmsh9adf6ec091523f8p165338jsncc58f31c26e1',\r\n        'X-RapidAPI-Host': 'judge0-ce.p.rapidapi.com'\r\n      }\r\n    };\r\n\r\n  \r\n    const res = await axios.request(options);\r\n    if (res.data.status_id <= 2) {\r\n      const res2 = await getOutput(token);\r\n      return res2.data;\r\n    }\r\n    return res.data;\r\n  }\r\n\r\n  const runCode = async () => {\r\n    openModal({\r\n      show: true,\r\n      modalType: 6,\r\n      identifiers: {\r\n\r\n        folderId: \"\",\r\n        cardId: \"\",\r\n      }\r\n    })\r\n    const language_id = languageMap[currentLanguage].id;\r\n    const source_code = encode(currentCode);\r\n    const stdin = encode(currentInput);\r\n\r\n  \r\n    const token = await postSubmission(language_id, source_code, stdin);\r\n\r\n    \r\n    const res = await getOutput(token);\r\n    const status_name = res.status.description;\r\n    const decoded_output = decode(res.stdout ? res.stdout : '');\r\n    const decoded_compile_output = decode(res.compile_output ? res.compile_output : '');\r\n    const decoded_error = decode(res.stderr ? res.stderr : '');\r\n    console.log(res)\r\n    console.log(decode(res.stdout),res.compile_output)\r\n    let final_output = '';\r\n    if (res.status_id !== 3) {\r\n      \r\n      if (decoded_compile_output === \"\") {\r\n        final_output = decoded_error;\r\n      }\r\n      else {\r\n        final_output = decoded_compile_output;\r\n      }\r\n    }\r\n    else {\r\n      final_output = decoded_output;\r\n    }\r\n    setCurrentOutput(status_name + \"\\n\\n\" + final_output);\r\n    closeModal();\r\n  }\r\n  const getFile = (e, setState) => {\r\n    const input = e.target;\r\n    if (\"files\" in input && input.files.length > 0) {\r\n      placeFileContent(input.files[0], setState);\r\n    }\r\n  };\r\n\r\n  const placeFileContent = (file, setState) => {\r\n    readFileContent(file)\r\n      .then((content) => {\r\n        setState(content)\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  function readFileContent(file) {\r\n    const reader = new FileReader();\r\n    return new Promise((resolve, reject) => {\r\n      reader.onload = (event) => resolve(event.target.result);\r\n      reader.onerror = (error) => reject(error);\r\n      reader.readAsText(file);\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n  \r\n  <div>\r\n      <Navbar isFullScreen={isFullScreen} />\r\n      <div className='flex flex-col lg:flex-row h-full sm:w-screen'>\r\n        <div className={`${isFullScreen ? \"w-full\" : \"w-full lg:w-3/4 \"}`}>\r\n          <EditContainer\r\n            title={title}\r\n            currentLanguage={currentLanguage}\r\n            setCurrentLanguage={setCurrentLanguage}\r\n            currentCode={currentCode}\r\n            setCurrentCode={setCurrentCode}\r\n            folderId={folderId}\r\n            playgroundId={playgroundId}\r\n            saveCode={saveCode}\r\n            runCode={runCode}\r\n            getFile={getFile}\r\n            isFullScreen={isFullScreen}\r\n            setIsFullScreen={setIsFullScreen}\r\n          />\r\n        </div>\r\n        {\r\n          !isFullScreen &&\r\n          <div className={`w-full lg:w-1/4`}>\r\n            <InputConsol\r\n              // currentInput={currentInput}\r\n              // setCurrentInput={setCurrentInput}\r\n              getFile={getFile}\r\n            />\r\n            <OutputConsol\r\n              // currentOutput={currentOutput}\r\n            />\r\n          </div>\r\n        }\r\n        {isOpenModal.show && <Modal />}\r\n      </div>\r\n        \r\n\r\n    </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlayGround"],"names":["isFullScreen","className","src","logo","alt","currentLanguage","currentTheme","currentCode","setCurrentCode","useState","githubDark","theme","setTheme","javascript","language","setLanguage","useEffect","githubLight","bespin","duotoneDark","duotoneLight","dracula","xcodeDark","xcodeLight","vscodeDark","okaidia","python","cpp","java","value","height","extensions","indentUnit","EditorState","onChange","basicSetup","lineNumbers","highlightActiveLineGutter","highlightSpecialChars","history","foldGutter","drawSelection","dropCursor","allowMultipleSelections","indentOnInput","syntaxHighlighting","bracketMatching","closeBrackets","autocompletion","rectangularSelection","crosshairCursor","highlightActiveLine","highlightSelectionMatches","closeBracketsKeymap","defaultKeymap","searchKeymap","historyKeymap","foldKeymap","completionKeymap","lintKeymap","title","setCurrentLanguage","folderId","playgroundId","saveCode","runCode","getFile","setIsFullScreen","openModal","GetModalContext","themeOptions","label","languageOptions","setCurrentTheme","i","length","style","fontSize","onClick","show","modalType","identifiers","cardId","options","selectedOption","languageMap","defaultCode","htmlFor","type","accept","id","e","href","encodeURIComponent","download","currentOutput","disabled","currentInput","setCurrentInput","useParams","target","GetPlayGroundContext","folders","savePlayground","isOpenModal","closeModal","setCurrentOutput","playgrounds","code","encode","str","Buffer","toString","decode","postSubmission","language_id","source_code","stdin","method","url","params","base64_encoded","fields","headers","data","JSON","stringify","axios","res","token","getOutput","status_id","res2","status_name","status","description","decoded_output","stdout","decoded_compile_output","compile_output","decoded_error","stderr","console","log","final_output","setState","input","files","placeFileContent","file","reader","FileReader","Promise","resolve","reject","onload","event","result","onerror","error","readAsText","readFileContent","then","content","catch","Modal"],"sourceRoot":""}